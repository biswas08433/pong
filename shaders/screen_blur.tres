[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://1mqrmn0n1mr5"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_fffe7"]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_uak2h"]
parameter_name = "Texture2DParameter"
texture_filter = 4
texture_repeat = 2
texture_source = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_i4bjc"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeUIntConstant" id="VisualShaderNodeUIntConstant_i5pm1"]
constant = 6

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Texture2DParameter : filter_linear_mipmap, repeat_disable, hint_screen_texture;



void fragment() {
// Input:4
	vec2 n_out4p0 = SCREEN_UV;


// UIntConstant:5
	uint n_out5p0 = 6u;


	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = textureLod(Texture2DParameter, n_out4p0, float(n_out5p0));


// Output:0
	COLOR.rgb = vec3(n_out2p0.xyz);


}
"
graph_offset = Vector2(-503.405, 51.0908)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_fffe7")
nodes/fragment/2/position = Vector2(100, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_uak2h")
nodes/fragment/3/position = Vector2(-440, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_i4bjc")
nodes/fragment/4/position = Vector2(-340, 80)
nodes/fragment/5/node = SubResource("VisualShaderNodeUIntConstant_i5pm1")
nodes/fragment/5/position = Vector2(-220, 180)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 2, 2, 5, 0, 2, 1, 4, 0, 2, 0)
